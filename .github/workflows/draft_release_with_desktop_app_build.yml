name: Draft release with a build of the desktop app

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-version-and-release:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Get version from package.json
        id: get-version
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Get latest *published* release version from GitHub
        id: get-latest
        run: |
          latest=$(gh release list --exclude-drafts --exclude-pre-releases -L 1 \
                    --json tagName -q '.[0].tagName' || echo "v0.0.0")
          echo "latest_release=${latest#v}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compare versions
        id: check
        run: |
          npm install -g semver

          if semver -r ">${{ steps.get-latest.outputs.latest_release }}" \
                    "${{ steps.get-version.outputs.version }}"; then
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi                       # ← close the if/else
        shell: bash

  win:
    needs: check-version-and-release
    if: needs.check-version-and-release.outputs.should_release == 'true'
    runs-on: windows-latest
    env:
      R_VERSION: "4.4.2"

    steps:
      - uses: actions/checkout@v4

      - name: Trigger container build workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-container-build

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ env.R_VERSION }}

      - uses: r-lib/actions/setup-renv@v2

      - name: Install npm packages
        run: npm ci

      - name: Build desktop app (Windows, x64)
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip dist
        run: |
          Compress-Archive -Path dist\kwallm-text-analysis-app-win32-x64 `
                           -DestinationPath kwallm-text-analysis-app-win32-x64.zip

      - name: Draft GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-version-and-release.outputs.version }}
          target_commitish: ${{ github.sha }}
          name: "KWALLM v${{ needs.check-version-and-release.outputs.version }} (Windows, x64)"
          draft: true
          generate_release_notes: true
          append_body: true
          body: |
            # v${{ needs.check-version-and-release.outputs.version }} (EN)
            *English version above — Dutch version below (Engelse versie boven — Nederlandse versie onder)*

            *This is a new release of our app for text analysis with LLMs! Changes:*
            **TODO: ADD LIST OF CHANGES HERE**

            ## Desktop app
            The files in this release are for the desktop application (Windows, x64).
            Usage is simple:
            1. Download `kwallm-text-analysis-app-win32-x64.7z` (see ‘Assets’ below)
            2. Unzip this to a folder, open the folder, and launch `kwallm-text-analysis-app.exe`

            ### Admin rights & network access
            Admin rights are not required to use this app. However, the app may ask to access your local network to find a free port for the R (Shiny) process. If you do not (or cannot) grant permission, port **21471** is chosen by default. If that port is busy the app will fail to start. In some cases, the app may not close properly (keeping the port occupied) and therefore cannot restart. If that happens: close the R processes on your machine via task manager, or restart your machine.

            ## Container app
            You can use the pre-built container:
            1. `docker pull ghcr.io/kennispunttwente/tekstanalyse_met_llm:latest`
            2. `docker run -p 3838:3838 ghcr.io/kennispunttwente/tekstanalyse_met_llm:latest`
            3. Browse to `http://localhost:3838`

            Alternatively build your own image; see the 'Dockerfile' and the instructions in the [README](https://github.com/KennispuntTwente/tekstanalyse_met_llm#3-container-app).

            ## Want to launch the app from R (e.g., RStudio)?
            See the instructions in the [README](https://github.com/KennispuntTwente/tekstanalyse_met_llm#1-r-environment).

            ## About this app
            This app was developed by [Kennispunt Twente](https://www.kennispunttwente.nl) in collaboration with GGD Twente.
            Together, our organizations work on applying generative AI for the benefit of society.

            Ideas or suggestions? [Open an issue](https://github.com/kennispunttwente/tekstanalyse_met_llm/issues/new).

            ---

            # v${{ needs.check-version-and-release.outputs.version }} (NL)
            *Engelse versie boven — Nederlandse versie onder (English version above — Dutch version below)*

            *Dit is een nieuwe release van onze app voor tekstanalyse met LLM's! Wijzigingen:*
            **TODO: VOEG LIJST VAN WIJZIGINGEN TOE**

            ## Desktop-app
            Bestanden bij deze release zijn voor de desktopapplicatie (Windows, x64).
            Gebruik is simpel:
            1. Download `kwallm-text-analysis-app-win32-x64.7z` (zie ‘Assets’ beneden)
            2. Unzip dit naar een map, open de map, en start `kwallm-text-analysis-app.exe`

            ### Admin-rechten & netwerktoegang
            Admin-rechten zijn niet nodig voor het gebruik van deze app. De app kan wel toestemming vragen tot je lokale netwerk om een vrije port voor R (Shiny) te vinden. Geef je geen toestemming, dan wordt standaard de port **21471** gebruikt. Is die port bezet, dan start de app niet. Soms komt het voor dat de app niet goed afsluit, en de port bezet houdt. Sluit in dat geval alle R-processen af via taakbeheer, of restart je machine.

            ## Container-app
            Gebruik de pre-built container:
            1. `docker pull ghcr.io/kennispunttwente/tekstanalyse_met_llm:latest`
            2. `docker run -p 3838:3838 ghcr.io/kennispunttwente/tekstanalyse_met_llm:latest`
            3. Open `http://localhost:3838` in je browser

            Je kunt ook zelf een image bouwen; zie de 'Dockerfile' en instructies in de [README](https://github.com/KennispuntTwente/tekstanalyse_met_llm#3-container-applicatie).

            ## Wil je de app starten vanuit jouw R-omgeving (bijv. RStudio)?
            Lees de instructies in de [README](https://github.com/KennispuntTwente/tekstanalyse_met_llm#1-r-omgeving).

            ## Over deze app
            Deze app is ontwikkeld door [Kennispunt Twente](https://www.kennispunttwente.nl) in samenwerking met GGD Twente.
            Samen werken onze organisaties aan toepassingen van generatieve AI ten behoeve van de samenleving.

            Ideeën of verbeterpunten? [Open een issue](https://github.com/kennispunttwente/tekstanalyse_met_llm/issues/new).

            ---
          files: kwallm-text-analysis-app-win32-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
